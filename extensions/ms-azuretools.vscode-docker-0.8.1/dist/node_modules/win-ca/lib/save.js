// Generated by CoffeeScript 1.12.7

/*
Save Root CAs to disk
 */
var all, create, der2, fs, hash, mkdir, ok, path, paths;

fs = require('fs');

path = require('path');

all = require('./all');

hash = require('./hash');

mkdir = require('make-dir');

der2 = require('./der2');

paths = require('./paths');

(create = function() {
  var dst;
  if (!paths.length) {
    return;
  }
  return mkdir(dst = paths.shift()()).then(function() {
    return ok(dst);
  })["catch"](create);
})();

ok = function(dst) {
  var drop, hashes, list, name, names, pems, roots, save;
  require('.').path = dst;
  process.env.SSL_CERT_DIR = dst;
  list = all(der2.der);
  hashes = {};
  names = {};
  pems = fs.createWriteStream(path.join(dst, roots = 'roots.pem'));
  names[roots] = 1;
  name = function(hash) {
    var n;
    hashes[hash] || (hashes[hash] = 0);
    n = hash + "." + (hashes[hash]++);
    names[n] = 1;
    return n;
  };
  drop = function() {
    return fs.readdir(dst, function(err, files) {
      if (err) {
        throw err;
      }
      files = files.filter(function(file) {
        return !names[file];
      });
      return (drop = function(err) {
        if (err) {
          throw err;
        }
        if (files.length) {
          return fs.unlink(path.join(dst, files.pop()), drop);
        }
      })(false);
    });
  };
  return (save = function(err) {
    var crt, text;
    if (err) {
      throw err;
    }
    if (!list.length) {
      pems.end();
      drop();
      return;
    }
    pems.write(text = der2(der2.txt, crt = list.pop()));
    return fs.writeFile(path.join(dst, name(hash(crt))), text, save);
  })(false);
};
